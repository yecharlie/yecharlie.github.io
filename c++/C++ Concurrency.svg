<?xml version="1.0" standalone="no"?><?xml-stylesheet type="text/css" href="https://www.processon.com/themes/default/mind/icons/icons.css" ?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" version="1.1" xlink="http://www.w3.org/1999/xlink" id="mind-svg-con" style="position: absolute; left: 0px; top: 0px; width: 3814.2px; height: 1762px; background: rgb(255, 249, 217) none repeat scroll 0% 0%; z-index: 999;" width="3814.2000732421875px" height="1762px"><defs></defs><g id="svgbackgroundid"><defs></defs><rect x="0" y="0" width="3814.2000732421875" height="1762" fill="#FFF9D9"></rect></g><g transform="translate(-7940.99951171875, -9040.999542236328)" id="sdjakdjak4"><defs></defs><g class="svg-topic-con" transform="translate(0.5,0.5)"><path part="right" sub="true" id="line_979b725792a7" d="M 9999.999542236328 9935.999542236328 L 10134.499542236328 9935.999542236328 C 10174.499542236328 9935.999542236328 10174.499542236328 9375.5 10239.499542236328 9375.5 L 10331.499542236328 9375.5" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path part="right" sub="true" id="line_0aed9d8c67e2" d="M 9999.999542236328 9935.999542236328 L 10134.499542236328 9935.999542236328 C 10174.499542236328 9935.999542236328 10174.499542236328 10241.5 10239.499542236328 10241.5 L 10331.499542236328 10241.5" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path part="left" sub="true" id="line_fc74e9bdeba4" d="M 9999.999542236328 9935.999542236328 L 9865.499542236328 9935.999542236328 C 9825.499542236328 9935.999542236328 9825.499542236328 9936 9759.499542236328 9936 L 9603.499542236328 9936" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path></g><g class="svg-connection-con" transform="translate(0.5,0.5)"></g><g class="svg-freesums-con" transform="translate(0.5,0.5)"></g><g class="svg-freebos-con" transform="translate(0.5,0.5)"></g></g><g id="0aed9d8c67e2"><rect x="2298.5" y="1170.2333679199219" rx="1px" ry="1px" width="92" height="30" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="16px" font-weight="normal" fill="rgb(13, 11, 34)" style="font-size:16px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:normal;font-style: normal;"><tspan x="2312.5" y="1191.3666687011719"><tspan>共享数据</tspan></tspan></text></g></g><g id="5270f4003d57"><rect x="2466.5167236328125" y="1092.5500183105469" rx="1px" ry="1px" width="317" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2475.5167236328125" y="1112.5166931152344"><tspan>锁，只让参与修改的线程见到数据结构变化时中间态</tspan></tspan></text></g></g><g id="535c275b7a3a"><rect x="2859.5333251953125" y="700.1499938964844" rx="1px" ry="1px" width="111" height="65" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2868.5333251953125" y="719.1499938964844"><tspan>设计经验</tspan></tspan><tspan x="2868.5333251953125" y="737.3499938964844"><tspan>std::lock_guard</tspan></tspan><tspan x="2868.5333251953125" y="755.5499938964845"><tspan>std::mutex</tspan></tspan></text></g></g><g id="318f484cbd83"><rect x="3046.9666748046875" y="640" rx="1px" ry="1px" width="70" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3055.9666748046875" y="659.9666748046875"><tspan>锁的封装</tspan></tspan></text></g></g><g id="30ef884d5bbd"><rect x="3046.9666748046875" y="709.2499694824219" rx="1px" ry="1px" width="135" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3055.9666748046875" y="729.2166442871094"><tspan>意外暴露数据的隐患</tspan></tspan></text></g></g><g id="92aa91b99fbd"><rect x="3257.9666748046875" y="686.1666564941406" rx="1px" ry="1px" width="174" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3266.9666748046875" y="706.1333312988281"><tspan>向外传递被保护数据的危害</tspan></tspan></text></g></g><g id="695fbf501ee3"><rect x="3257.9666748046875" y="732.3333435058594" rx="1px" ry="1px" width="122" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3266.9666748046875" y="752.3000183105469"><tspan>传入用户提供函数</tspan></tspan></text></g></g><g id="450ef3119407"><rect x="3046.9666748046875" y="787.1166687011719" rx="1px" ry="1px" width="135" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3055.9666748046875" y="807.0833435058594"><tspan>划定保护数据的范围</tspan></tspan></text></g></g><g id="0fdcd1b29170"><rect x="3257.9833984375" y="778.4999694824219" rx="1px" ry="1px" width="248" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3266.9833984375" y="797.4999694824219"><tspan>如果要删除一个双向链表的某节点，</tspan></tspan><tspan x="3266.9833984375" y="815.6999694824219"><tspan>为什么光保护每个单节点还不够？</tspan></tspan></text></g><path d="M906.372741 0.018963C960.777481 0.075852 1005.131852 44.126815 1005.131852 98.49363L1005.131852 98.49363 1005.131852 98.49363 1005.131852 925.525333C1005.131852 979.892148 960.777481 1024 906.221037 1024L117.835852 1024C63.16563 1024 18.868148 979.892148 18.868148 925.525333L18.868148 98.49363C18.868148 44.126815 63.222519 0.018963 117.835852 0.018963M925.980444 74.088296 93.790815 74.088296 93.790815 945.170963 925.866667 945.170963 925.904593 945.170963 925.904593 74.088296 925.980444 74.088296 925.980444 74.088296ZM217.353481 338.640593 449.744593 338.640593C454.428444 338.640593 458.258963 334.829037 458.258963 330.145185L458.258963 264.438519 458.258963 263.338667C458.258963 258.673778 454.428444 254.748444 449.85837 254.748444L217.353481 254.748444C212.612741 254.748444 208.839111 258.673778 208.839111 263.338667L208.839111 330.145185C208.839111 334.829037 212.612741 338.640593 217.353481 338.640593L217.353481 338.640593 217.353481 338.640593ZM217.353481 554.799407 673.526519 554.799407C678.229333 554.799407 682.040889 550.987852 682.040889 546.304L682.040889 480.57837C682.154667 480.161185 682.154667 479.819852 682.154667 479.440593 682.154667 474.775704 678.381037 470.964148 673.754074 470.964148L217.353481 470.964148C212.612741 470.964148 208.839111 474.775704 208.839111 479.440593L208.839111 546.360889C208.839111 550.930963 212.612741 554.799407 217.353481 554.799407L217.353481 554.799407 217.353481 554.799407ZM217.353481 770.901333 806.532741 770.901333C811.178667 770.901333 815.047111 767.089778 815.047111 762.405926L815.047111 696.699259C815.104 696.263111 815.104 695.940741 815.104 695.542519 815.104 690.87763 811.33037 687.066074 806.760296 687.066074L217.353481 687.066074C212.612741 687.066074 208.839111 690.87763 208.839111 695.542519L208.839111 762.462815C208.839111 767.089778 212.612741 770.901333 217.353481 770.901333L217.353481 770.901333 217.353481 770.901333Z" fill="#0D0B22" transform="translate(3481, 794.6999816894531) scale(0.013671875)"></path></g><g id="910d1f7c25b4"><rect x="2859.5333251953125" y="951.9499816894531" rx="1px" ry="1px" width="115" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2868.5333251953125" y="971.9166564941406"><tspan>设计实例：stack</tspan></tspan></text></g></g><g id="702ba4c10490"><rect x="3050.2000732421875" y="841.8999938964844" rx="1px" ry="1px" width="254" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3059.2000732421875" y="861.8666687011719"><tspan>empty、size 无法和其它操作建立不定式</tspan></tspan></text></g></g><g id="7562bd6ee4c1"><rect x="3050.2000732421875" y="975.0333557128906" rx="1px" ry="1px" width="126" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3059.2000732421875" y="994.9999694824219"><tspan>top/pop 接口设计</tspan></tspan></text></g></g><g id="3748acc0e5a3"><rect x="3251.88330078125" y="951.9499816894531" rx="1px" ry="1px" width="48" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3260.88330078125" y="971.9166564941406"><tspan>合并</tspan></tspan></text></g></g><g id="23df7780ba62"><rect x="3375.88330078125" y="888.0666809082031" rx="1px" ry="1px" width="239" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3384.88330078125" y="908.0333557128906"><tspan>使用输出参数，要求默认构造、可赋值</tspan></tspan></text></g></g><g id="d35d9fcf3e85"><rect x="3375.88330078125" y="934.2333679199219" rx="1px" ry="1px" width="408" height="65" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3384.88330078125" y="953.2333679199219"><tspan>直接返回对象，要求有不会抛出异常的复制构造函数或移动构造函数</tspan></tspan><tspan x="3384.88330078125" y="971.4333679199219"><tspan>std::is_nothrow_copy_constructible</tspan></tspan><tspan x="3384.88330078125" y="989.633367919922"><tspan>std::is_nothrow_move_constructible</tspan></tspan></text></g></g><g id="131eba921d6c"><rect x="3375.88330078125" y="1015.8333435058594" rx="1px" ry="1px" width="356" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3384.88330078125" y="1035.8000183105469"><tspan>返回对象的（智能）指针，额外的内存管理或者额外的开销</tspan></tspan></text></g></g><g id="ee95e995baf4"><rect x="3251.88330078125" y="1061.9999694824219" rx="1px" ry="1px" width="226" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3260.88330078125" y="1081.9666442871094"><tspan>分开，无法建立两个操作间的不变式</tspan></tspan></text></g></g><g id="6fe985fb8444"><rect x="2859.5333251953125" y="1192.1166687011719" rx="1px" ry="1px" width="130" height="35" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="18px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:18px;font-family:黑体;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2868.5333251953125" y="1216.1166687011719"><tspan>死锁的预防</tspan></tspan></text></g><path d="M906.372741 0.018963C960.777481 0.075852 1005.131852 44.126815 1005.131852 98.49363L1005.131852 98.49363 1005.131852 98.49363 1005.131852 925.525333C1005.131852 979.892148 960.777481 1024 906.221037 1024L117.835852 1024C63.16563 1024 18.868148 979.892148 18.868148 925.525333L18.868148 98.49363C18.868148 44.126815 63.222519 0.018963 117.835852 0.018963M925.980444 74.088296 93.790815 74.088296 93.790815 945.170963 925.866667 945.170963 925.904593 945.170963 925.904593 74.088296 925.980444 74.088296 925.980444 74.088296ZM217.353481 338.640593 449.744593 338.640593C454.428444 338.640593 458.258963 334.829037 458.258963 330.145185L458.258963 264.438519 458.258963 263.338667C458.258963 258.673778 454.428444 254.748444 449.85837 254.748444L217.353481 254.748444C212.612741 254.748444 208.839111 258.673778 208.839111 263.338667L208.839111 330.145185C208.839111 334.829037 212.612741 338.640593 217.353481 338.640593L217.353481 338.640593 217.353481 338.640593ZM217.353481 554.799407 673.526519 554.799407C678.229333 554.799407 682.040889 550.987852 682.040889 546.304L682.040889 480.57837C682.154667 480.161185 682.154667 479.819852 682.154667 479.440593 682.154667 474.775704 678.381037 470.964148 673.754074 470.964148L217.353481 470.964148C212.612741 470.964148 208.839111 474.775704 208.839111 479.440593L208.839111 546.360889C208.839111 550.930963 212.612741 554.799407 217.353481 554.799407L217.353481 554.799407 217.353481 554.799407ZM217.353481 770.901333 806.532741 770.901333C811.178667 770.901333 815.047111 767.089778 815.047111 762.405926L815.047111 696.699259C815.104 696.263111 815.104 695.940741 815.104 695.542519 815.104 690.87763 811.33037 687.066074 806.760296 687.066074L217.353481 687.066074C212.612741 687.066074 208.839111 690.87763 208.839111 695.542519L208.839111 762.462815C208.839111 767.089778 212.612741 770.901333 217.353481 770.901333L217.353481 770.901333 217.353481 770.901333Z" fill="#0D0B22" transform="translate(2964.5333251953125, 1202.7166442871094) scale(0.013671875)"></path></g><g id="197917f6f153"><rect x="3065.5333251953125" y="1108.1666564941406" rx="1px" ry="1px" width="239" height="65" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3074.5333251953125" y="1127.1666564941406"><tspan>同时加锁</tspan></tspan><tspan x="3074.5333251953125" y="1145.3666564941407"><tspan>std::lock</tspan></tspan><tspan x="3074.5333251953125" y="1163.5666564941407"><tspan>std::lock_guard with std::adopt_lock</tspan></tspan></text></g></g><g id="043e069fbf41"><rect x="3065.5333251953125" y="1189.7666931152344" rx="1px" ry="1px" width="96" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3074.5333251953125" y="1209.7333679199219"><tspan>避免嵌套加锁</tspan></tspan></text></g></g><g id="111818cae150"><rect x="3065.5333251953125" y="1235.9333190917969" rx="1px" ry="1px" width="161" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3074.5333251953125" y="1255.8999938964844"><tspan>加锁时避免调用用户函数</tspan></tspan></text></g></g><g id="f92cf83f2f35"><rect x="3065.5333251953125" y="1282.1000671386719" rx="1px" ry="1px" width="109" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3074.5333251953125" y="1302.0666198730469"><tspan>按固定次序加锁</tspan></tspan></text></g></g><g id="a7891a32a654"><rect x="3250.550048828125" y="1282.1000671386719" rx="1px" ry="1px" width="122" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3259.550048828125" y="1302.0666198730469"><tspan>定义一系列体系锁</tspan></tspan></text></g></g><g id="6c863eeb0e56"><rect x="2859.5333251953125" y="1328.2666931152344" rx="1px" ry="1px" width="257" height="83" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2868.5333251953125" y="1347.2666931152344"><tspan>更精准地控制锁的行为:</tspan></tspan><tspan x="2868.5333251953125" y="1365.4666931152344"><tspan>std::unique_lock（VS std::lock_guard）</tspan></tspan><tspan x="2868.5333251953125" y="1383.6666931152345"><tspan>with std::defer_lock &amp; std::adopt_lock</tspan></tspan><tspan x="2868.5333251953125" y="1401.8666931152345"><tspan>unique_lock::unlock/lock</tspan></tspan></text></g></g><g id="7dd424a6a965"><rect x="3192.933349609375" y="1346.4666442871094" rx="1px" ry="1px" width="83" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3201.933349609375" y="1365.4666442871094"><tspan>转移所有权</tspan></tspan><tspan x="3201.933349609375" y="1383.6666442871094"><tspan>std::move</tspan></tspan></text></g></g><g id="5f4361b4d914"><rect x="2859.5333251953125" y="1428.0666198730469" rx="1px" ry="1px" width="298" height="83" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2868.5333251953125" y="1447.0666198730469"><tspan>保护很少更新的数据结构，读写锁：</tspan></tspan><tspan x="2868.5333251953125" y="1465.266619873047"><tspan>boost::shared_mutex</tspan></tspan><tspan x="2868.5333251953125" y="1483.466619873047"><tspan>写 std::lock_guard&lt;boost::shared_mutex&gt;</tspan></tspan><tspan x="2868.5333251953125" y="1501.666619873047"><tspan>读 boost::shared_lock&lt;boost::shared_mutex&gt;</tspan></tspan></text></g></g><g id="1db4820e4ee4"><rect x="2859.5333251953125" y="1527.8666687011719" rx="1px" ry="1px" width="144" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2868.5333251953125" y="1546.8666687011719"><tspan>循环锁</tspan></tspan><tspan x="2868.5333251953125" y="1565.066668701172"><tspan>std::recursive_mutex</tspan></tspan></text></g></g><g id="086655dea0cd"><rect x="2466.5167236328125" y="1591.2666931152344" rx="1px" ry="1px" width="291" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2475.5167236328125" y="1611.2333679199219"><tspan>无锁编程，将修改拆分为一系列不可分割的操作</tspan></tspan></text></g></g><g id="2a4a4faffffc"><rect x="2466.5167236328125" y="1637.4333190917969" rx="1px" ry="1px" width="48" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2475.5167236328125" y="1657.3999938964844"><tspan>事务</tspan></tspan></text></g></g><g id="b6bcc4a5e900"><rect x="2466.5167236328125" y="1683.6000671386719" rx="1px" ry="1px" width="215" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2475.5167236328125" y="1702.6000671386719"><tspan>共享变量初始化的同步</tspan></tspan><tspan x="2475.5167236328125" y="1720.800067138672"><tspan>std::call_once &amp;&amp; std::once_flag</tspan></tspan></text></g></g><g id="01f31da3c3d7"><rect x="2757.9000244140625" y="1692.2166442871094" rx="1px" ry="1px" width="221" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2766.9000244140625" y="1712.1833190917969"><tspan>局部静态变量自动同步（C++ 11）</tspan></tspan></text></g></g><g id="979b725792a7"><rect x="2298.5" y="304.2166748046875" rx="1px" ry="1px" width="92" height="30" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="16px" font-weight="normal" fill="rgb(13, 11, 34)" style="font-size:16px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:normal;font-style: normal;"><tspan x="2312.5" y="325.3500061035156"><tspan>线程管理</tspan></tspan></text></g></g><g id="f99ce00ae334"><rect x="2466.5167236328125" y="168.5" rx="1px" ry="1px" width="84" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2475.5167236328125" y="187.5"><tspan>创建和启动</tspan></tspan><tspan x="2475.5167236328125" y="205.7"><tspan>std::thread</tspan></tspan></text></g></g><g id="4331e13ba66e"><rect x="2626.683349609375" y="154.03334045410156" rx="1px" ry="1px" width="161" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2635.683349609375" y="174"><tspan>为线程创建独立的栈空间</tspan></tspan></text></g></g><g id="380635ff0732"><rect x="2863.683349609375" y="30" rx="1px" ry="1px" width="148" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2872.683349609375" y="49.9666748046875"><tspan>复制传入的可调用对象</tspan></tspan></text></g></g><g id="d446a79a07af"><rect x="2863.683349609375" y="76.16667175292969" rx="1px" ry="1px" width="317" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2872.683349609375" y="96.13333129882812"><tspan>【默认】复制所有参数，包括对应形参为引用的参数</tspan></tspan></text></g></g><g id="841c6d3b8356"><rect x="3256.683349609375" y="76.16667175292969" rx="1px" ry="1px" width="204" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3265.683349609375" y="96.13333129882812"><tspan>【覆盖】 使用std::ref(data)语义</tspan></tspan></text></g></g><g id="98aae04bd4da"><rect x="2863.683349609375" y="122.33332824707031" rx="1px" ry="1px" width="200" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2872.683349609375" y="142.3000030517578"><tspan>在新开的栈上完成参数隐式转换</tspan></tspan></text></g></g><g id="cee568943f2c"><rect x="2863.683349609375" y="214.6666717529297" rx="1px" ry="1px" width="135" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2872.683349609375" y="233.6666717529297"><tspan>移交参数对象控制权</tspan></tspan><tspan x="2872.683349609375" y="251.86667175292968"><tspan>std::unique_ptr</tspan></tspan></text></g></g><g id="c11747f5b03c"><rect x="3074.7000732421875" y="168.5" rx="1px" ry="1px" width="122" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3083.7000732421875" y="188.4666748046875"><tspan>匿名对象隐式传递</tspan></tspan></text></g></g><g id="e93ed40f50bd"><rect x="3074.7000732421875" y="214.6666717529297" rx="1px" ry="1px" width="96" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3083.7000732421875" y="233.6666717529297"><tspan>命名对象借助</tspan></tspan><tspan x="3083.7000732421875" y="251.86667175292968"><tspan>std::move</tspan></tspan></text></g></g><g id="a455f636d2e5"><rect x="3074.7000732421875" y="278.06666564941406" rx="1px" ry="1px" width="168" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="3083.7000732421875" y="298.03334045410156"><tspan>thread_guard接管thread</tspan></tspan></text></g></g><g id="41120c283f66"><rect x="2626.683349609375" y="324.23333740234375" rx="1px" ry="1px" width="200" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2635.683349609375" y="344.1999969482422"><tspan>使用花括号解决调用歧义性问题</tspan></tspan></text></g></g><g id="384f301fd53d"><rect x="2466.5167236328125" y="393.48333740234375" rx="1px" ry="1px" width="204" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2475.5167236328125" y="412.48333740234375"><tspan>等待线程完成</tspan></tspan><tspan x="2475.5167236328125" y="430.68333740234374"><tspan>thread::join &amp; thread::joinable</tspan></tspan></text></g></g><g id="961085580ec9"><rect x="2746.25" y="370.40000915527344" rx="1px" ry="1px" width="188" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2755.25" y="390.3666687011719"><tspan>join 会清理线程空间，不可逆</tspan></tspan></text></g></g><g id="c5a126bcf395"><rect x="2746.25" y="416.56666564941406" rx="1px" ry="1px" width="296" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2755.25" y="435.56666564941406"><tspan>基于栈的异常回滚特性，创建thread_guard对象</tspan></tspan><tspan x="2755.25" y="453.76666564941405"><tspan>可以保证即使在异常发生时join也会被调用</tspan></tspan></text></g></g><g id="f1e4a216d8f9"><rect x="2466.5167236328125" y="479.9666748046875" rx="1px" ry="1px" width="223" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2475.5167236328125" y="498.9666748046875"><tspan>让线程独立运行</tspan></tspan><tspan x="2475.5167236328125" y="517.1666748046875"><tspan>thread::detach &amp; thread::joinable</tspan></tspan></text></g></g><g id="f9fd57ec1e07"><rect x="2765.2667236328125" y="488.5833435058594" rx="1px" ry="1px" width="429" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2774.2667236328125" y="508.5500183105469"><tspan>切断代理和线程的联系，否则代理销毁时会调用std::terminate终止线程</tspan></tspan></text></g></g><g id="0cfc6d06b67b"><rect x="2466.5167236328125" y="543.3666687011719" rx="1px" ry="1px" width="112" height="65" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="2475.5167236328125" y="562.3666687011719"><tspan>标记线程</tspan></tspan><tspan x="2475.5167236328125" y="580.5666687011719"><tspan>std::this_thread</tspan></tspan><tspan x="2475.5167236328125" y="598.766668701172"><tspan>thread::get_id</tspan></tspan></text></g></g><g id="35bd7a6045e7"><rect x="1215.4833679199219" y="314" rx="1px" ry="1px" width="226" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="1224.4833679199219" y="333.9666748046875"><tspan>多线程访问不同内存位置，互不干扰</tspan></tspan></text></g></g><g id="6352312d252c"><rect x="1130.5000305175781" y="360.1666717529297" rx="1px" ry="1px" width="48" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="1139.5000305175781" y="380.1333312988281"><tspan>锁</tspan></tspan></text></g></g><g id="9115fed27eb3"><rect x="699.0167236328125" y="406.3333282470703" rx="1px" ry="1px" width="265" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="708.0167236328125" y="426.3000030517578"><tspan>原子类型对象，编译器保证一致的修改顺序</tspan></tspan></text></g></g><g id="37439366ff35"><rect x="595.0333862304688" y="452.5" rx="1px" ry="1px" width="369" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="604.0333862304688" y="472.4666748046875"><tspan>非原子类型对象，需要借助原子操作里的同步机制保证一致性</tspan></tspan></text></g></g><g id="b9e085156543"><rect x="290" y="498.6666564941406" rx="1px" ry="1px" width="317" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="299" y="517.6666564941406"><tspan>全知模式</tspan></tspan><tspan x="299" y="535.8666564941407"><tspan>所有发生了的事情都会知道，不知道的肯定没有发生</tspan></tspan></text></g></g><g id="f6da158b60f9"><rect x="30" y="562.0666809082031" rx="1px" ry="1px" width="577" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="39" y="581.0666809082031"><tspan style="fill: rgb(245, 127, 23);">接头模式</tspan></tspan><tspan x="39" y="599.2666809082032"><tspan>在特定地点发生的最近一次写操作的相关线程会向随后在此地发生读操作的其它线程同步自身状态</tspan></tspan></text></g></g><g id="37c7112ed72b"><rect x="225" y="625.4666748046875" rx="1px" ry="1px" width="382" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="234" y="644.4666748046875"><tspan>隐式非强制性同步模式/弹性模式</tspan></tspan><tspan x="234" y="662.6666748046875"><tspan>纵向来看单个变量同步不及时，横向来看不同变量同步各自独立</tspan></tspan></text></g></g><g id="3f3ae020a01f"><rect x="683.0167236328125" y="570.6833190917969" rx="1px" ry="1px" width="70" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="692.0167236328125" y="590.6499938964844"><tspan>同步模式</tspan></tspan></text></g></g><g id="0cfb35754e7d"><rect x="511.0167236328125" y="688.8666687011719" rx="1px" ry="1px" width="96" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="520.0167236328125" y="708.8333435058594"><tspan>前排（语句）</tspan></tspan></text></g></g><g id="0061cf4c53e3"><rect x="511.0167236328125" y="735.0333557128906" rx="1px" ry="1px" width="96" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="520.0167236328125" y="754.9999694824219"><tspan>（线程）同步</tspan></tspan></text></g></g><g id="6a4142f611b0"><rect x="511.0167236328125" y="781.1999816894531" rx="1px" ry="1px" width="96" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="520.0167236328125" y="801.1666564941406"><tspan>先发（事件）</tspan></tspan></text></g></g><g id="37560507f7be"><rect x="511.0167236328125" y="827.3666687011719" rx="1px" ry="1px" width="96" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="520.0167236328125" y="847.3333435058594"><tspan>（变量）依赖</tspan></tspan></text></g></g><g id="d3d46ef058d0"><rect x="683.0167236328125" y="758.1166687011719" rx="1px" ry="1px" width="70" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="692.0167236328125" y="778.0833435058594"><tspan>同步术语</tspan></tspan></text></g></g><g id="5f35df8893ea"><rect x="394.0167236328125" y="873.5333557128906" rx="1px" ry="1px" width="213" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="403.0167236328125" y="893.4999694824219"><tspan>对于单个线程内部，前排语句先发</tspan></tspan></text></g></g><g id="b0aaa6851b0e"><rect x="380.550048828125" y="919.6999816894531" rx="1px" ry="1px" width="226" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="389.550048828125" y="939.6666564941406"><tspan>操作A对操作B同步，那么操作A先发</tspan></tspan></text></g></g><g id="af76e008be3c"><rect x="472.0167236328125" y="965.8666687011719" rx="1px" ry="1px" width="135" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="481.0167236328125" y="985.8333435058594"><tspan>先发状态具有传递性</tspan></tspan></text></g></g><g id="d5580d09fbde"><rect x="82" y="1012.0333557128906" rx="1px" ry="1px" width="525" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="91" y="1031.0333557128906"><tspan>同步链：两个需要同步的写、读操作之间可以承接多个读写连携操作而不改变其语义。</tspan></tspan><tspan x="91" y="1049.2333557128907"><tspan>其中连携操作可以为弹性，此时写操作与连携操作间不发生同步。（举接头模式的例子）</tspan></tspan></text></g></g><g id="4df1cd7cc3e0"><rect x="145.7833251953125" y="1075.4333190917969" rx="1px" ry="1px" width="461" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="154.7833251953125" y="1095.3999938964844"><tspan>数据流同步：仅针对数据流同步，源头为原子对象的load操作，是同步的特例</tspan></tspan></text></g></g><g id="e08100eda9c3"><rect x="683.0167236328125" y="974.4833679199219" rx="1px" ry="1px" width="70" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="692.0167236328125" y="994.4499816894531"><tspan>同步性质</tspan></tspan></text></g></g><g id="68d0b7552e6c"><rect x="368" y="1121.6000061035156" rx="1px" ry="1px" width="239" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="377" y="1141.5666809082031"><tspan>在两个对象上的单一操作不会是原子的</tspan></tspan></text></g></g><g id="fdd8e0087c4d"><rect x="329.0167236328125" y="1167.7666931152344" rx="1px" ry="1px" width="278" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="338.0167236328125" y="1187.7333679199219"><tspan>在一个对象上的两个操作之间无法建立不变式</tspan></tspan></text></g></g><g id="b42b91ba4402"><rect x="683.0167236328125" y="1144.6833190917969" rx="1px" ry="1px" width="70" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="692.0167236328125" y="1164.6499938964844"><tspan>原子操作</tspan></tspan></text></g></g><g id="3611fd347f2b"><rect x="829.0167236328125" y="833.2166442871094" rx="1px" ry="1px" width="135" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="838.0167236328125" y="853.1833190917969"><tspan>原子操作与同步机制</tspan></tspan></text></g></g><g id="567fde485734"><rect x="1040.0333862304688" y="787.0500183105469" rx="1px" ry="1px" width="138" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="1049.0333862304688" y="807.0166931152344"><tspan>原子l类型和原子操作</tspan></tspan></text></g></g><g id="e3bc23eaaecf"><rect x="1254.5000305175781" y="763.9666442871094" rx="1px" ry="1px" width="187" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="1263.5000305175781" y="783.9333190917969"><tspan>访问相同内存位置，需要同步</tspan></tspan></text></g></g><g id="e0b886cc7cc7"><rect x="1517.5000305175781" y="740.8833312988281" rx="1px" ry="1px" width="70" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="1526.5000305175781" y="760.8500061035156"><tspan>内存模型</tspan></tspan></text></g></g><g id="a8ae7bbd4746"><rect x="1096.8167114257812" y="1213.9333190917969" rx="1px" ry="1px" width="267" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="1105.8167114257812" y="1232.9333190917969"><tspan>shared_ptr</tspan></tspan><tspan x="1105.8167114257812" y="1251.133319091797"><tspan>atomic_is_lock_free&lt;shared_ptr&gt;==true</tspan></tspan></text></g></g><g id="281227b32e86"><rect x="822.4500122070312" y="1277.3333435058594" rx="1px" ry="1px" width="265" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="831.4500122070312" y="1297.3000183105469"><tspan>每当有一个对象指向自己，外引用计数加一</tspan></tspan></text></g></g><g id="0fcccfd646bd"><rect x="848.4500122070312" y="1323.4999694824219" rx="1px" ry="1px" width="239" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="857.4500122070312" y="1343.4666442871094"><tspan>当一个对象不再需要自己，内引用减一</tspan></tspan></text></g></g><g id="5f27e8585deb"><rect x="497.4666748046875" y="1369.6667175292969" rx="1px" ry="1px" width="590" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="506.4666748046875" y="1389.6332702636719"><tspan>如果这个对象对外界不可见，将外引用计数减一后加到内引用计数上，并弃用外引用计数（不可逆）</tspan></tspan></text></g></g><g id="f2cccd47c371"><rect x="853.8500366210938" y="1415.8333435058594" rx="1px" ry="1px" width="234" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="862.8500366210938" y="1435.8000183105469"><tspan>当内引用变为0时可以安全地删除对象</tspan></tspan></text></g></g><g id="4ae878b847fc"><rect x="1163.4667053222656" y="1337.9666442871094" rx="1px" ry="1px" width="200" height="46" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="1172.4667053222656" y="1356.9666442871094"><tspan>契引用计数：</tspan></tspan><tspan x="1172.4667053222656" y="1375.1666442871094"><tspan>尽最大可能地减少删除时的竞争</tspan></tspan></text></g></g><g id="53007c9cf0a8"><rect x="1439.4833679199219" y="1314.8832702636719" rx="1px" ry="1px" width="148" height="29" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="13px" font-weight="400" fill="rgb(13, 11, 34)" style="font-size:13px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:400;font-style: normal;"><tspan x="1448.4833679199219" y="1334.8500671386719"><tspan>并行环境下的内存管理</tspan></tspan></text></g></g><g id="fc74e9bdeba4"><rect x="1663.5000305175781" y="864.7333679199219" rx="1px" ry="1px" width="156" height="30" style="fill: transparent; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="16px" font-weight="normal" fill="rgb(13, 11, 34)" style="font-size:16px;font-family:微软雅黑;color:#0D0B22;font-style:normal;text-align:left;font-weight:normal;font-style: normal;"><tspan x="1677.5000305175781" y="885.8666687011719"><tspan>设计无锁数据结构</tspan></tspan></text></g></g><g transform="translate(2298.5, 640)" id="sdjakdjak0"><g id="subline_0aed9d8c67e2" transform="translate(0.5,-0.5)"><path id="line_5270f4003d57" d="M 92 562 L 92 562 M 92 562 C 138.0167236328125 562 130.00836181640625 483 168.0167236328125 483 L 485.0167236328125 483" p="0aed9d8c67e2" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_535c275b7a3a" d="M 485.0167236328125 483 L 485.0167236328125 483 M 485.0167236328125 483 C 531.0333251953125 483 523.0250244140625 126 561.0333251953125 126 L 672.0333251953125 126" p="5270f4003d57" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_318f484cbd83" d="M 672.0333251953125 126 L 672.0333251953125 126 M 672.0333251953125 126 C 718.4666748046875 126 710.25 30 748.4666748046875 30 L 818.4666748046875 30" p="535c275b7a3a" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_30ef884d5bbd" d="M 672.0333251953125 126 L 672.0333251953125 126 M 672.0333251953125 126 C 718.4666748046875 126 710.25 99 748.4666748046875 99 L 883.4666748046875 99" p="535c275b7a3a" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_92aa91b99fbd" d="M 883.4666748046875 99 L 883.4666748046875 99 M 883.4666748046875 99 C 929.4666748046875 99 921.4666748046875 76 959.4666748046875 76 L 1133.4666748046875 76" p="30ef884d5bbd" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_695fbf501ee3" d="M 883.4666748046875 99 L 883.4666748046875 99 M 883.4666748046875 99 C 929.4666748046875 99 921.4666748046875 122 959.4666748046875 122 L 1081.4666748046875 122" p="30ef884d5bbd" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_450ef3119407" d="M 672.0333251953125 126 L 672.0333251953125 126 M 672.0333251953125 126 C 718.4666748046875 126 710.25 177 748.4666748046875 177 L 883.4666748046875 177" p="535c275b7a3a" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_0fdcd1b29170" d="M 883.4666748046875 177 L 883.4666748046875 177 M 883.4666748046875 177 C 929.4833984375 177 921.4750366210938 186 959.4833984375 186 L 1207.4833984375 186" p="450ef3119407" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_910d1f7c25b4" d="M 485.0167236328125 483 L 485.0167236328125 483 M 485.0167236328125 483 C 531.0333251953125 483 523.0250244140625 342 561.0333251953125 342 L 676.0333251953125 342" p="5270f4003d57" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_702ba4c10490" d="M 676.0333251953125 342 L 676.0333251953125 342 M 676.0333251953125 342 C 721.7000732421875 342 713.86669921875 232 751.7000732421875 232 L 1005.7000732421875 232" p="910d1f7c25b4" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_7562bd6ee4c1" d="M 676.0333251953125 342 L 676.0333251953125 342 M 676.0333251953125 342 C 721.7000732421875 342 713.86669921875 365 751.7000732421875 365 L 877.7000732421875 365" p="910d1f7c25b4" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_3748acc0e5a3" d="M 877.7000732421875 365 L 877.7000732421875 365 M 877.7000732421875 365 C 923.38330078125 365 915.5416870117188 342 953.38330078125 342 L 1001.38330078125 342" p="7562bd6ee4c1" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_23df7780ba62" d="M 1001.38330078125 342 L 1001.38330078125 342 M 1001.38330078125 342 C 1047.38330078125 342 1039.38330078125 278 1077.38330078125 278 L 1316.38330078125 278" p="3748acc0e5a3" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_d35d9fcf3e85" d="M 1001.38330078125 342 L 1001.38330078125 342 M 1001.38330078125 342 C 1047.38330078125 342 1039.38330078125 360 1077.38330078125 360 L 1485.38330078125 360" p="3748acc0e5a3" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_131eba921d6c" d="M 1001.38330078125 342 L 1001.38330078125 342 M 1001.38330078125 342 C 1047.38330078125 342 1039.38330078125 406 1077.38330078125 406 L 1433.38330078125 406" p="3748acc0e5a3" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_ee95e995baf4" d="M 877.7000732421875 365 L 877.7000732421875 365 M 877.7000732421875 365 C 923.38330078125 365 915.5416870117188 452 953.38330078125 452 L 1179.38330078125 452" p="7562bd6ee4c1" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_6fe985fb8444" d="M 485.0167236328125 483 L 485.0167236328125 483 M 485.0167236328125 483 C 531.0333251953125 483 523.0250244140625 588 561.0333251953125 588 L 691.0333251953125 588" p="5270f4003d57" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_197917f6f153" d="M 691.0333251953125 588 L 691.0333251953125 588 M 691.0333251953125 588 C 737.0333251953125 588 729.0333251953125 534 767.0333251953125 534 L 1006.0333251953125 534" p="6fe985fb8444" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_043e069fbf41" d="M 691.0333251953125 588 L 691.0333251953125 588 M 691.0333251953125 588 C 737.0333251953125 588 729.0333251953125 580 767.0333251953125 580 L 863.0333251953125 580" p="6fe985fb8444" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_111818cae150" d="M 691.0333251953125 588 L 691.0333251953125 588 M 691.0333251953125 588 C 737.0333251953125 588 729.0333251953125 626 767.0333251953125 626 L 928.0333251953125 626" p="6fe985fb8444" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_f92cf83f2f35" d="M 691.0333251953125 588 L 691.0333251953125 588 M 691.0333251953125 588 C 737.0333251953125 588 729.0333251953125 672 767.0333251953125 672 L 876.0333251953125 672" p="6fe985fb8444" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_a7891a32a654" d="M 876.0333251953125 672 L 876.0333251953125 672 M 876.0333251953125 672 C 922.050048828125 672 914.0416870117188 672 952.050048828125 672 L 1074.050048828125 672" p="f92cf83f2f35" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_6c863eeb0e56" d="M 485.0167236328125 483 L 485.0167236328125 483 M 485.0167236328125 483 C 531.0333251953125 483 523.0250244140625 772 561.0333251953125 772 L 818.0333251953125 772" p="5270f4003d57" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_7dd424a6a965" d="M 818.0333251953125 772 L 818.0333251953125 772 M 818.0333251953125 772 C 864.433349609375 772 856.2333374023438 754 894.433349609375 754 L 977.433349609375 754" p="6c863eeb0e56" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_5f4361b4d914" d="M 485.0167236328125 483 L 485.0167236328125 483 M 485.0167236328125 483 C 531.0333251953125 483 523.0250244140625 872 561.0333251953125 872 L 859.0333251953125 872" p="5270f4003d57" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_1db4820e4ee4" d="M 485.0167236328125 483 L 485.0167236328125 483 M 485.0167236328125 483 C 531.0333251953125 483 523.0250244140625 935 561.0333251953125 935 L 705.0333251953125 935" p="5270f4003d57" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_086655dea0cd" d="M 92 562 L 92 562 M 92 562 C 138.0167236328125 562 130.00836181640625 981 168.0167236328125 981 L 459.0167236328125 981" p="0aed9d8c67e2" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_2a4a4faffffc" d="M 92 562 L 92 562 M 92 562 C 138.0167236328125 562 130.00836181640625 1027 168.0167236328125 1027 L 216.0167236328125 1027" p="0aed9d8c67e2" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_b6bcc4a5e900" d="M 92 562 L 92 562 M 92 562 C 138.0167236328125 562 130.00836181640625 1091 168.0167236328125 1091 L 383.0167236328125 1091" p="0aed9d8c67e2" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_01f31da3c3d7" d="M 383.0167236328125 1091 L 383.0167236328125 1091 M 383.0167236328125 1091 C 429.4000244140625 1091 421.2083740234375 1082 459.4000244140625 1082 L 680.4000244140625 1082" p="b6bcc4a5e900" stroke="#7549C5" fill="none" stroke-linecap="round" stroke-width="3"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(2298.5, 30)" id="sdjakdjak1"><g id="subline_979b725792a7" transform="translate(0.5,-0.5)"><path id="line_f99ce00ae334" d="M 92 306 L 92 306 M 92 306 C 138.0167236328125 306 130.00836181640625 186 168.0167236328125 186 L 252.0167236328125 186" p="979b725792a7" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_4331e13ba66e" d="M 252.0167236328125 186 L 252.0167236328125 186 M 252.0167236328125 186 C 298.183349609375 186 290.10003662109375 154 328.183349609375 154 L 489.183349609375 154" p="f99ce00ae334" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_380635ff0732" d="M 489.183349609375 154 L 489.183349609375 154 M 489.183349609375 154 C 535.183349609375 154 527.183349609375 30 565.183349609375 30 L 713.183349609375 30" p="4331e13ba66e" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_d446a79a07af" d="M 489.183349609375 154 L 489.183349609375 154 M 489.183349609375 154 C 535.183349609375 154 527.183349609375 76 565.183349609375 76 L 882.183349609375 76" p="4331e13ba66e" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_841c6d3b8356" d="M 882.183349609375 76 L 882.183349609375 76 M 882.183349609375 76 C 928.183349609375 76 920.183349609375 76 958.183349609375 76 L 1162.183349609375 76" p="d446a79a07af" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_98aae04bd4da" d="M 489.183349609375 154 L 489.183349609375 154 M 489.183349609375 154 C 535.183349609375 154 527.183349609375 122 565.183349609375 122 L 765.183349609375 122" p="4331e13ba66e" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_cee568943f2c" d="M 489.183349609375 154 L 489.183349609375 154 M 489.183349609375 154 C 535.183349609375 154 527.183349609375 232 565.183349609375 232 L 700.183349609375 232" p="4331e13ba66e" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_c11747f5b03c" d="M 700.183349609375 232 L 700.183349609375 232 M 700.183349609375 232 C 746.2000732421875 232 738.1917114257812 169 776.2000732421875 169 L 898.2000732421875 169" p="cee568943f2c" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_e93ed40f50bd" d="M 700.183349609375 232 L 700.183349609375 232 M 700.183349609375 232 C 746.2000732421875 232 738.1917114257812 232 776.2000732421875 232 L 872.2000732421875 232" p="cee568943f2c" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_a455f636d2e5" d="M 700.183349609375 232 L 700.183349609375 232 M 700.183349609375 232 C 746.2000732421875 232 738.1917114257812 278 776.2000732421875 278 L 944.2000732421875 278" p="cee568943f2c" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_41120c283f66" d="M 252.0167236328125 186 L 252.0167236328125 186 M 252.0167236328125 186 C 298.183349609375 186 290.10003662109375 324 328.183349609375 324 L 528.183349609375 324" p="f99ce00ae334" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_384f301fd53d" d="M 92 306 L 92 306 M 92 306 C 138.0167236328125 306 130.00836181640625 411 168.0167236328125 411 L 372.0167236328125 411" p="979b725792a7" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_961085580ec9" d="M 372.0167236328125 411 L 372.0167236328125 411 M 372.0167236328125 411 C 417.75 411 409.88336181640625 370 447.75 370 L 635.75 370" p="384f301fd53d" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_c5a126bcf395" d="M 372.0167236328125 411 L 372.0167236328125 411 M 372.0167236328125 411 C 417.75 411 409.88336181640625 434 447.75 434 L 743.75 434" p="384f301fd53d" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_f1e4a216d8f9" d="M 92 306 L 92 306 M 92 306 C 138.0167236328125 306 130.00836181640625 497 168.0167236328125 497 L 391.0167236328125 497" p="979b725792a7" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_f9fd57ec1e07" d="M 391.0167236328125 497 L 391.0167236328125 497 M 391.0167236328125 497 C 436.7667236328125 497 428.8917236328125 488 466.7667236328125 488 L 895.7667236328125 488" p="f1e4a216d8f9" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_0cfc6d06b67b" d="M 92 306 L 92 306 M 92 306 C 138.0167236328125 306 130.00836181640625 579 168.0167236328125 579 L 280.0167236328125 579" p="979b725792a7" stroke="#0F80C4" fill="none" stroke-linecap="round" stroke-width="3"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(30, 314)" id="sdjakdjak2"><g id="subline_fc74e9bdeba4" transform="translate(0.5,-0.5)"><path id="line_e0b886cc7cc7" d="M 1633.5000305175781 582 L 1633.5000305175781 582 M 1633.5000305175781 582 C 1587.5000305175781 582 1595.5000305175781 457 1557.5000305175781 457 L 1487.5000305175781 457" p="fc74e9bdeba4" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_35bd7a6045e7" d="M 1487.5000305175781 457 L 1487.5000305175781 457 M 1487.5000305175781 457 C 1441.4833679199219 457 1449.49169921875 30 1411.4833679199219 30 L 1185.4833679199219 30" p="e0b886cc7cc7" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_e3bc23eaaecf" d="M 1487.5000305175781 457 L 1487.5000305175781 457 M 1487.5000305175781 457 C 1441.5000305175781 457 1449.5000305175781 480 1411.5000305175781 480 L 1224.5000305175781 480" p="e0b886cc7cc7" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_6352312d252c" d="M 1224.5000305175781 480 L 1224.5000305175781 480 M 1224.5000305175781 480 C 1178.5000305175781 480 1186.5000305175781 76 1148.5000305175781 76 L 1100.5000305175781 76" p="e3bc23eaaecf" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_567fde485734" d="M 1224.5000305175781 480 L 1224.5000305175781 480 M 1224.5000305175781 480 C 1178.0333862304688 480 1186.2667083740234 503 1148.0333862304688 503 L 1010.0333862304688 503" p="e3bc23eaaecf" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_9115fed27eb3" d="M 1010.0333862304688 503 L 1010.0333862304688 503 M 1010.0333862304688 503 C 964.0167236328125 503 972.0250549316406 122 934.0167236328125 122 L 669.0167236328125 122" p="567fde485734" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_37439366ff35" d="M 1010.0333862304688 503 L 1010.0333862304688 503 M 1010.0333862304688 503 C 964.0333862304688 503 972.0333862304688 169 934.0333862304688 169 L 565.0333862304688 169" p="567fde485734" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_3611fd347f2b" d="M 1010.0333862304688 503 L 1010.0333862304688 503 M 1010.0333862304688 503 C 964.0167236328125 503 972.0250549316406 549 934.0167236328125 549 L 799.0167236328125 549" p="567fde485734" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_3f3ae020a01f" d="M 799.0167236328125 549 L 799.0167236328125 549 M 799.0167236328125 549 C 753.0167236328125 549 761.0167236328125 287 723.0167236328125 287 L 653.0167236328125 287" p="3611fd347f2b" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_b9e085156543" d="M 653.0167236328125 287 L 653.0167236328125 287 M 653.0167236328125 287 C 607 287 615.0083618164062 232 577 232 L 260 232" p="3f3ae020a01f" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_f6da158b60f9" d="M 653.0167236328125 287 L 653.0167236328125 287 M 653.0167236328125 287 C 607 287 615.0083618164062 296 577 296 L 0 296" p="3f3ae020a01f" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_37c7112ed72b" d="M 653.0167236328125 287 L 653.0167236328125 287 M 653.0167236328125 287 C 607 287 615.0083618164062 359 577 359 L 195 359" p="3f3ae020a01f" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_d3d46ef058d0" d="M 799.0167236328125 549 L 799.0167236328125 549 M 799.0167236328125 549 C 753.0167236328125 549 761.0167236328125 474 723.0167236328125 474 L 653.0167236328125 474" p="3611fd347f2b" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_0cfb35754e7d" d="M 653.0167236328125 474 L 653.0167236328125 474 M 653.0167236328125 474 C 607.0167236328125 474 615.0167236328125 405 577.0167236328125 405 L 481.0167236328125 405" p="d3d46ef058d0" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_0061cf4c53e3" d="M 653.0167236328125 474 L 653.0167236328125 474 M 653.0167236328125 474 C 607.0167236328125 474 615.0167236328125 451 577.0167236328125 451 L 481.0167236328125 451" p="d3d46ef058d0" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_6a4142f611b0" d="M 653.0167236328125 474 L 653.0167236328125 474 M 653.0167236328125 474 C 607.0167236328125 474 615.0167236328125 497 577.0167236328125 497 L 481.0167236328125 497" p="d3d46ef058d0" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_37560507f7be" d="M 653.0167236328125 474 L 653.0167236328125 474 M 653.0167236328125 474 C 607.0167236328125 474 615.0167236328125 543 577.0167236328125 543 L 481.0167236328125 543" p="d3d46ef058d0" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_e08100eda9c3" d="M 799.0167236328125 549 L 799.0167236328125 549 M 799.0167236328125 549 C 753.0167236328125 549 761.0167236328125 690 723.0167236328125 690 L 653.0167236328125 690" p="3611fd347f2b" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_5f35df8893ea" d="M 653.0167236328125 690 L 653.0167236328125 690 M 653.0167236328125 690 C 607.0167236328125 690 615.0167236328125 590 577.0167236328125 590 L 364.0167236328125 590" p="e08100eda9c3" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_b0aaa6851b0e" d="M 653.0167236328125 690 L 653.0167236328125 690 M 653.0167236328125 690 C 606.550048828125 690 614.7833862304688 636 576.550048828125 636 L 350.550048828125 636" p="e08100eda9c3" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_af76e008be3c" d="M 653.0167236328125 690 L 653.0167236328125 690 M 653.0167236328125 690 C 607.0167236328125 690 615.0167236328125 682 577.0167236328125 682 L 442.0167236328125 682" p="e08100eda9c3" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_d5580d09fbde" d="M 653.0167236328125 690 L 653.0167236328125 690 M 653.0167236328125 690 C 607 690 615.0083618164062 746 577 746 L 52 746" p="e08100eda9c3" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_4df1cd7cc3e0" d="M 653.0167236328125 690 L 653.0167236328125 690 M 653.0167236328125 690 C 606.7833251953125 690 614.9000244140625 791 576.7833251953125 791 L 115.7833251953125 791" p="e08100eda9c3" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_b42b91ba4402" d="M 799.0167236328125 549 L 799.0167236328125 549 M 799.0167236328125 549 C 753.0167236328125 549 761.0167236328125 861 723.0167236328125 861 L 653.0167236328125 861" p="3611fd347f2b" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_68d0b7552e6c" d="M 653.0167236328125 861 L 653.0167236328125 861 M 653.0167236328125 861 C 607 861 615.0083618164062 838 577 838 L 338 838" p="b42b91ba4402" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_fdd8e0087c4d" d="M 653.0167236328125 861 L 653.0167236328125 861 M 653.0167236328125 861 C 607.0167236328125 861 615.0167236328125 884 577.0167236328125 884 L 299.0167236328125 884" p="b42b91ba4402" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_53007c9cf0a8" d="M 1633.5000305175781 582 L 1633.5000305175781 582 M 1633.5000305175781 582 C 1587.4833679199219 582 1595.49169921875 1031 1557.4833679199219 1031 L 1409.4833679199219 1031" p="fc74e9bdeba4" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_a8ae7bbd4746" d="M 1409.4833679199219 1031 L 1409.4833679199219 1031 M 1409.4833679199219 1031 C 1363.8167114257812 1031 1371.6500396728516 947 1333.8167114257812 947 L 1066.8167114257812 947" p="53007c9cf0a8" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_4ae878b847fc" d="M 1409.4833679199219 1031 L 1409.4833679199219 1031 M 1409.4833679199219 1031 C 1363.4667053222656 1031 1371.4750366210938 1071 1333.4667053222656 1071 L 1133.4667053222656 1071" p="53007c9cf0a8" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_281227b32e86" d="M 1133.4667053222656 1071 L 1133.4667053222656 1071 M 1133.4667053222656 1071 C 1087.4500122070312 1071 1095.4583587646484 993 1057.4500122070312 993 L 792.4500122070312 993" p="4ae878b847fc" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_0fcccfd646bd" d="M 1133.4667053222656 1071 L 1133.4667053222656 1071 M 1133.4667053222656 1071 C 1087.4500122070312 1071 1095.4583587646484 1039 1057.4500122070312 1039 L 818.4500122070312 1039" p="4ae878b847fc" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_5f27e8585deb" d="M 1133.4667053222656 1071 L 1133.4667053222656 1071 M 1133.4667053222656 1071 C 1087.4666748046875 1071 1095.4666900634766 1086 1057.4666748046875 1086 L 467.4666748046875 1086" p="4ae878b847fc" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path><path id="line_f2cccd47c371" d="M 1133.4667053222656 1071 L 1133.4667053222656 1071 M 1133.4667053222656 1071 C 1087.8500366210938 1071 1095.6583709716797 1132 1057.8500366210938 1132 L 823.8500366210938 1132" p="4ae878b847fc" stroke="#0FBAB0" fill="none" stroke-linecap="round" stroke-width="3"></path></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g transform="translate(1919.5000305175781, 860.9999694824219)" id="sdjakdjak3"><g id="subline_root" transform="translate(0.5,-0.5)"></g><g transform="translate(0.5,0)"></g><g class="svg-summary-con" transform="translate(0.5,0.5)"></g><g class="svg-boundary-con" transform="translate(0.5,0.5)"></g></g><g id="root"><rect x="1919.5000305175781" y="860.9999694824219" rx="7px" ry="7px" width="279" height="68" style="fill: #ffffff; stroke:none;"></rect><g><text text-anchor="start" align="top" anchor="start" font-size="24px" font-weight="normal" fill="rgb(42, 46, 54)" style="font-size:24px;font-family:微软雅黑;color:#2A2E36;font-style:normal;text-align:left;font-weight:normal;font-style: normal;"><tspan x="1957.5000305175781" y="902.9999694824219"><tspan>C++ Concurrency</tspan></tspan></text></g></g></svg>
